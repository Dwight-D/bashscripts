#!/bin/bash
#Autogenerated script template

#     Variable declarations
#========================================

me=${0##*/}

usage (){
    echo "$me - Write stuff down"
    echo "Usage: $me PROJECT"
    echo -e "\tPROJECT - name of the project, for ordering of notes into subdirs"
    exit 1
}

init_note_file() {
    if [[ ! -r $_note_file ]]; then
        touch $_note_file
        echo -e "# $_today\n" >> $_note_file
        echo -e "## Notes\n" >> $_note_file
        echo -e "## Done\n" >> $_note_file
        echo -e "## To-Do\n" >> $_note_file
    fi
}


#       Parse options
#=======================================

while getopts "h" opt; do
    case $opt in
        h )
            usage
            ;;
        \? )
            usage
            ;;
        : )
            echo "Option requires an argument: $OPTARG"
            exit
            ;;
    esac
done
shift $((OPTIND -1))

if [ "$#" -lt 1 ]; then
    usage
fi

_notes_dir=$NOTES_DIR
_today=$(date "+%Y-%m-%d")

_project_dir="$NOTES_DIR/$1"
if [[ ! -d $_project_dir ]]; then
    mkdir -p $_project_dir
fi

_note_file=$_project_dir/$_today.txt
init_note_file

_command=$2

if [[ -z $_command ]]; then
    vim $_note_file
    exit 0
fi

case $_command in
    latest)
        echo l8st
        ;;
    *)
        echo unrecognized command
        ;;
esac
